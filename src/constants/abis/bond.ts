export const BOND_ABI = [
  {
    type: 'constructor',
    inputs: [
      { name: 'tokenImplementation', type: 'address', internalType: 'address' },
      { name: 'multiTokenImplementation', type: 'address', internalType: 'address' },
      { name: 'protocolBeneficiary_', type: 'address', internalType: 'address' },
      { name: 'creationFee_', type: 'uint256', internalType: 'uint256' },
      { name: 'maxSteps', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'BURN_ADDRESS',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'burn',
    inputs: [
      { name: 'token', type: 'address', internalType: 'address' },
      { name: 'tokensToBurn', type: 'uint256', internalType: 'uint256' },
      { name: 'minRefund', type: 'uint256', internalType: 'uint256' },
      { name: 'receiver', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'burnRoyalties',
    inputs: [{ name: 'reserveToken', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'claimRoyalties',
    inputs: [{ name: 'reserveToken', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'createMultiToken',
    inputs: [
      {
        name: 'tp',
        type: 'tuple',
        internalType: 'struct MCV2_Bond.MultiTokenParams',
        components: [
          { name: 'name', type: 'string', internalType: 'string' },
          { name: 'symbol', type: 'string', internalType: 'string' },
          { name: 'uri', type: 'string', internalType: 'string' },
        ],
      },
      {
        name: 'bp',
        type: 'tuple',
        internalType: 'struct MCV2_Bond.BondParams',
        components: [
          { name: 'mintRoyalty', type: 'uint16', internalType: 'uint16' },
          { name: 'burnRoyalty', type: 'uint16', internalType: 'uint16' },
          { name: 'reserveToken', type: 'address', internalType: 'address' },
          { name: 'maxSupply', type: 'uint128', internalType: 'uint128' },
          { name: 'stepRanges', type: 'uint128[]', internalType: 'uint128[]' },
          { name: 'stepPrices', type: 'uint128[]', internalType: 'uint128[]' },
        ],
      },
    ],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'createToken',
    inputs: [
      {
        name: 'tp',
        type: 'tuple',
        internalType: 'struct MCV2_Bond.TokenParams',
        components: [
          { name: 'name', type: 'string', internalType: 'string' },
          { name: 'symbol', type: 'string', internalType: 'string' },
          { name: 'agentHash', type: 'bytes32', internalType: 'bytes32' },
        ],
      },
      {
        name: 'bp',
        type: 'tuple',
        internalType: 'struct MCV2_Bond.BondParams',
        components: [
          { name: 'mintRoyalty', type: 'uint16', internalType: 'uint16' },
          { name: 'burnRoyalty', type: 'uint16', internalType: 'uint16' },
          { name: 'reserveToken', type: 'address', internalType: 'address' },
          { name: 'maxSupply', type: 'uint128', internalType: 'uint128' },
          { name: 'stepRanges', type: 'uint128[]', internalType: 'uint128[]' },
          { name: 'stepPrices', type: 'uint128[]', internalType: 'uint128[]' },
        ],
      },
    ],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'creationFee',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'exists',
    inputs: [{ name: 'token', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getDetail',
    inputs: [{ name: 'token', type: 'address', internalType: 'address' }],
    outputs: [
      {
        name: 'detail',
        type: 'tuple',
        internalType: 'struct MCV2_Bond.BondDetail',
        components: [
          { name: 'mintRoyalty', type: 'uint16', internalType: 'uint16' },
          { name: 'burnRoyalty', type: 'uint16', internalType: 'uint16' },
          {
            name: 'info',
            type: 'tuple',
            internalType: 'struct MCV2_Bond.BondInfo',
            components: [
              { name: 'creator', type: 'address', internalType: 'address' },
              { name: 'token', type: 'address', internalType: 'address' },
              { name: 'decimals', type: 'uint8', internalType: 'uint8' },
              { name: 'symbol', type: 'string', internalType: 'string' },
              { name: 'name', type: 'string', internalType: 'string' },
              { name: 'createdAt', type: 'uint40', internalType: 'uint40' },
              { name: 'currentSupply', type: 'uint128', internalType: 'uint128' },
              { name: 'maxSupply', type: 'uint128', internalType: 'uint128' },
              { name: 'priceForNextMint', type: 'uint128', internalType: 'uint128' },
              { name: 'reserveToken', type: 'address', internalType: 'address' },
              { name: 'reserveDecimals', type: 'uint8', internalType: 'uint8' },
              { name: 'reserveSymbol', type: 'string', internalType: 'string' },
              { name: 'reserveName', type: 'string', internalType: 'string' },
              { name: 'reserveBalance', type: 'uint256', internalType: 'uint256' },
            ],
          },
          {
            name: 'steps',
            type: 'tuple[]',
            internalType: 'struct MCV2_Bond.BondStep[]',
            components: [
              { name: 'rangeTo', type: 'uint128', internalType: 'uint128' },
              { name: 'price', type: 'uint128', internalType: 'uint128' },
            ],
          },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getList',
    inputs: [
      { name: 'start', type: 'uint256', internalType: 'uint256' },
      { name: 'stop', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [
      {
        name: 'info',
        type: 'tuple[]',
        internalType: 'struct MCV2_Bond.BondInfo[]',
        components: [
          { name: 'creator', type: 'address', internalType: 'address' },
          { name: 'token', type: 'address', internalType: 'address' },
          { name: 'decimals', type: 'uint8', internalType: 'uint8' },
          { name: 'symbol', type: 'string', internalType: 'string' },
          { name: 'name', type: 'string', internalType: 'string' },
          { name: 'createdAt', type: 'uint40', internalType: 'uint40' },
          { name: 'currentSupply', type: 'uint128', internalType: 'uint128' },
          { name: 'maxSupply', type: 'uint128', internalType: 'uint128' },
          { name: 'priceForNextMint', type: 'uint128', internalType: 'uint128' },
          { name: 'reserveToken', type: 'address', internalType: 'address' },
          { name: 'reserveDecimals', type: 'uint8', internalType: 'uint8' },
          { name: 'reserveSymbol', type: 'string', internalType: 'string' },
          { name: 'reserveName', type: 'string', internalType: 'string' },
          { name: 'reserveBalance', type: 'uint256', internalType: 'uint256' },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getRefundForTokens',
    inputs: [
      { name: 'token', type: 'address', internalType: 'address' },
      { name: 'tokensToBurn', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [
      { name: 'refundAmount', type: 'uint256', internalType: 'uint256' },
      { name: 'royalty', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getReserveForToken',
    inputs: [
      { name: 'token', type: 'address', internalType: 'address' },
      { name: 'tokensToMint', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [
      { name: 'reserveAmount', type: 'uint256', internalType: 'uint256' },
      { name: 'royalty', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getRoyaltyInfo',
    inputs: [
      { name: 'wallet', type: 'address', internalType: 'address' },
      { name: 'reserveToken', type: 'address', internalType: 'address' },
    ],
    outputs: [
      { name: '', type: 'uint256', internalType: 'uint256' },
      { name: '', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getSteps',
    inputs: [{ name: 'token', type: 'address', internalType: 'address' }],
    outputs: [
      {
        name: '',
        type: 'tuple[]',
        internalType: 'struct MCV2_Bond.BondStep[]',
        components: [
          { name: 'rangeTo', type: 'uint128', internalType: 'uint128' },
          { name: 'price', type: 'uint128', internalType: 'uint128' },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getTokensByCreator',
    inputs: [
      { name: 'creator', type: 'address', internalType: 'address' },
      { name: 'start', type: 'uint256', internalType: 'uint256' },
      { name: 'stop', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: 'addresses', type: 'address[]', internalType: 'address[]' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getTokensByReserveToken',
    inputs: [
      { name: 'reserveToken', type: 'address', internalType: 'address' },
      { name: 'start', type: 'uint256', internalType: 'uint256' },
      { name: 'stop', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: 'addresses', type: 'address[]', internalType: 'address[]' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'maxRoyaltyRange',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'maxSupply',
    inputs: [{ name: 'token', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint128', internalType: 'uint128' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'mint',
    inputs: [
      { name: 'token', type: 'address', internalType: 'address' },
      { name: 'tokensToMint', type: 'uint256', internalType: 'uint256' },
      { name: 'maxReserveAmount', type: 'uint256', internalType: 'uint256' },
      { name: 'receiver', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'priceForNextMint',
    inputs: [{ name: 'token', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint128', internalType: 'uint128' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'protocolBeneficiary',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  { type: 'function', name: 'renounceOwnership', inputs: [], outputs: [], stateMutability: 'nonpayable' },
  {
    type: 'function',
    name: 'tokenBond',
    inputs: [{ name: '', type: 'address', internalType: 'address' }],
    outputs: [
      { name: 'creator', type: 'address', internalType: 'address' },
      { name: 'mintRoyalty', type: 'uint16', internalType: 'uint16' },
      { name: 'burnRoyalty', type: 'uint16', internalType: 'uint16' },
      { name: 'createdAt', type: 'uint40', internalType: 'uint40' },
      { name: 'reserveToken', type: 'address', internalType: 'address' },
      { name: 'reserveBalance', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'tokenCount',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'tokens',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'transferOwnership',
    inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'updateBondCreator',
    inputs: [
      { name: 'token', type: 'address', internalType: 'address' },
      { name: 'creator', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'updateCreationFee',
    inputs: [{ name: 'amount', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'updateMaxRoyaltyRange',
    inputs: [{ name: 'ratio', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'updateProtocolBeneficiary',
    inputs: [{ name: 'protocolBeneficiary_', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'userTokenRoyaltyBalance',
    inputs: [
      { name: '', type: 'address', internalType: 'address' },
      { name: '', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'userTokenRoyaltyClaimed',
    inputs: [
      { name: '', type: 'address', internalType: 'address' },
      { name: '', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'version',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'pure',
  },
  {
    type: 'event',
    name: 'BondCreatorUpdated',
    inputs: [
      { name: 'token', type: 'address', indexed: true, internalType: 'address' },
      { name: 'creator', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Burn',
    inputs: [
      { name: 'token', type: 'address', indexed: true, internalType: 'address' },
      { name: 'user', type: 'address', indexed: true, internalType: 'address' },
      { name: 'receiver', type: 'address', indexed: false, internalType: 'address' },
      { name: 'amountBurned', type: 'uint256', indexed: false, internalType: 'uint256' },
      { name: 'reserveToken', type: 'address', indexed: true, internalType: 'address' },
      { name: 'refundAmount', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'CreationFeeUpdated',
    inputs: [{ name: 'amount', type: 'uint256', indexed: false, internalType: 'uint256' }],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Mint',
    inputs: [
      { name: 'token', type: 'address', indexed: true, internalType: 'address' },
      { name: 'user', type: 'address', indexed: true, internalType: 'address' },
      { name: 'receiver', type: 'address', indexed: false, internalType: 'address' },
      { name: 'amountMinted', type: 'uint256', indexed: false, internalType: 'uint256' },
      { name: 'reserveToken', type: 'address', indexed: true, internalType: 'address' },
      { name: 'reserveAmount', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'MultiTokenCreated',
    inputs: [
      { name: 'token', type: 'address', indexed: true, internalType: 'address' },
      { name: 'name', type: 'string', indexed: false, internalType: 'string' },
      { name: 'symbol', type: 'string', indexed: false, internalType: 'string' },
      { name: 'uri', type: 'string', indexed: false, internalType: 'string' },
      { name: 'reserveToken', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      { name: 'previousOwner', type: 'address', indexed: true, internalType: 'address' },
      { name: 'newOwner', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ProtocolBeneficiaryUpdated',
    inputs: [{ name: 'protocolBeneficiary', type: 'address', indexed: false, internalType: 'address' }],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoyaltyClaimed',
    inputs: [
      { name: 'user', type: 'address', indexed: true, internalType: 'address' },
      { name: 'reserveToken', type: 'address', indexed: false, internalType: 'address' },
      { name: 'amount', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoyaltyRangeUpdated',
    inputs: [{ name: 'ratio', type: 'uint256', indexed: false, internalType: 'uint256' }],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'TokenCreated',
    inputs: [
      { name: 'token', type: 'address', indexed: true, internalType: 'address' },
      { name: 'name', type: 'string', indexed: false, internalType: 'string' },
      { name: 'symbol', type: 'string', indexed: false, internalType: 'string' },
      { name: 'reserveToken', type: 'address', indexed: true, internalType: 'address' },
      { name: 'agenthash', type: 'bytes32', indexed: true, internalType: 'bytes32' },
    ],
    anonymous: false,
  },
  { type: 'error', name: 'AddressEmptyCode', inputs: [{ name: 'target', type: 'address', internalType: 'address' }] },
  {
    type: 'error',
    name: 'AddressInsufficientBalance',
    inputs: [{ name: 'account', type: 'address', internalType: 'address' }],
  },
  { type: 'error', name: 'ERC1167FailedCreateClone', inputs: [] },
  { type: 'error', name: 'FailedInnerCall', inputs: [] },
  { type: 'error', name: 'MCV2_BOND__InvalidPaginationParameters', inputs: [] },
  { type: 'error', name: 'MCV2_Bond__CreationFeeTransactionFailed', inputs: [] },
  { type: 'error', name: 'MCV2_Bond__ExceedMaxSupply', inputs: [] },
  { type: 'error', name: 'MCV2_Bond__ExceedTotalSupply', inputs: [] },
  {
    type: 'error',
    name: 'MCV2_Bond__InvalidConstructorParams',
    inputs: [{ name: 'reason', type: 'string', internalType: 'string' }],
  },
  { type: 'error', name: 'MCV2_Bond__InvalidCreationFee', inputs: [] },
  { type: 'error', name: 'MCV2_Bond__InvalidCreatorAddress', inputs: [] },
  { type: 'error', name: 'MCV2_Bond__InvalidCurrentSupply', inputs: [] },
  { type: 'error', name: 'MCV2_Bond__InvalidReceiver', inputs: [] },
  {
    type: 'error',
    name: 'MCV2_Bond__InvalidReserveToken',
    inputs: [{ name: 'reason', type: 'string', internalType: 'string' }],
  },
  {
    type: 'error',
    name: 'MCV2_Bond__InvalidStepParams',
    inputs: [{ name: 'reason', type: 'string', internalType: 'string' }],
  },
  { type: 'error', name: 'MCV2_Bond__InvalidTokenAmount', inputs: [] },
  {
    type: 'error',
    name: 'MCV2_Bond__InvalidTokenCreationParams',
    inputs: [{ name: 'reason', type: 'string', internalType: 'string' }],
  },
  { type: 'error', name: 'MCV2_Bond__PermissionDenied', inputs: [] },
  { type: 'error', name: 'MCV2_Bond__SlippageLimitExceeded', inputs: [] },
  { type: 'error', name: 'MCV2_Bond__TokenNotFound', inputs: [] },
  { type: 'error', name: 'MCV2_Bond__TokenSymbolAlreadyExists', inputs: [] },
  { type: 'error', name: 'MCV2_Royalty__InvalidParams', inputs: [] },
  { type: 'error', name: 'MCV2_Royalty__NothingToClaim', inputs: [] },
  { type: 'error', name: 'OwnableInvalidOwner', inputs: [{ name: 'owner', type: 'address', internalType: 'address' }] },
  {
    type: 'error',
    name: 'OwnableUnauthorizedAccount',
    inputs: [{ name: 'account', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'SafeCastOverflowedUintDowncast',
    inputs: [
      { name: 'bits', type: 'uint8', internalType: 'uint8' },
      { name: 'value', type: 'uint256', internalType: 'uint256' },
    ],
  },
  {
    type: 'error',
    name: 'SafeERC20FailedOperation',
    inputs: [{ name: 'token', type: 'address', internalType: 'address' }],
  },
] as const;
